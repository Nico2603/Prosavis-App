rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // === USUARIOS ===
    // CRUD completo para su propio perfil
    match /users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if request.auth != null && 
                  request.auth.uid == userId &&
                  // 🖼️ Validar URL de imagen de perfil (si se actualiza)
                  (!request.resource.data.keys().hasAny(['profileImageUrl']) || 
                   request.resource.data.profileImageUrl == null || 
                   request.resource.data.profileImageUrl.matches('https://firebasestorage.googleapis.com/.*'));
    }
    
    // === SERVICIOS ===
    // ✅ NAVEGACIÓN PÚBLICA: Cualquiera puede explorar servicios
    // 🔒 GESTIÓN PRIVADA: Solo el propietario puede crear/modificar sus servicios
    match /services/{serviceId} {
      allow read: if true; // 📖 Lectura pública para navegación
      
      // ✅ CREAR SERVICIO: Validaciones robustas para nuevos servicios
      allow create: if request.auth != null && 
                   request.auth.uid == request.resource.data.providerId && // 🔐 Solo usuarios autenticados
                   // 📋 Validar campos obligatorios
                   request.resource.data.keys().hasAll(['title', 'description', 'category', 'price', 'providerId']) &&
                   request.resource.data.title is string && request.resource.data.title.size() > 5 &&
                   request.resource.data.description is string && request.resource.data.description.size() > 10 &&
                   request.resource.data.category is string && request.resource.data.category.size() > 0 &&
                   request.resource.data.price is number && request.resource.data.price >= 0 &&
                   // 🖼️ Validar que las URLs de imágenes sean de Firebase Storage (si existen)
                   (!request.resource.data.keys().hasAny(['mainImage']) || 
                    request.resource.data.mainImage == null || 
                    request.resource.data.mainImage.matches('https://firebasestorage.googleapis.com/.*')) &&
                   (!request.resource.data.keys().hasAny(['images']) || 
                    request.resource.data.images is list);
      
      // ✅ ACTUALIZAR/ELIMINAR SERVICIO: Solo el propietario
      allow update, delete: if request.auth != null && 
                           request.auth.uid == resource.data.providerId && // 🔐 Solo el propietario
                           // 🖼️ Validar URLs de imágenes en actualizaciones (si se modifican)
                           (!request.resource.data.keys().hasAny(['mainImage']) || 
                            request.resource.data.mainImage == null || 
                            request.resource.data.mainImage.matches('https://firebasestorage.googleapis.com/.*')) &&
                           (!request.resource.data.keys().hasAny(['images']) || 
                            request.resource.data.images is list);
      
      // === RESEÑAS DE SERVICIOS ===
      // Subcolección para reseñas y puntuaciones
      match /reviews/{reviewId} {
        allow read: if true; // 📖 Cualquiera puede leer reseñas
        allow create: if request.auth != null && 
                     request.auth.uid == request.resource.data.userId && // 🔐 Solo usuarios autenticados
                     request.auth.uid != get(/databases/$(database)/documents/services/$(serviceId)).data.providerId; // 🚫 No auto-reseñas
        allow update, delete: if request.auth != null && 
                             request.auth.uid == resource.data.userId; // 🔐 Solo el autor de la reseña
      }
      
      // === IMÁGENES DE SERVICIOS ===
      // Metadatos de imágenes (las imágenes reales van en Storage)
      match /images/{imageId} {
        allow read: if true; // 📖 Cualquiera puede ver metadatos de imágenes
        allow write: if request.auth != null && 
                    request.auth.uid == get(/databases/$(database)/documents/services/$(serviceId)).data.providerId; // 🔐 Solo el propietario del servicio
      }
    }
    
    // === CATEGORÍAS DE SERVICIOS ===
    // ✅ NAVEGACIÓN PÚBLICA: Cualquiera puede ver categorías
    // 🔒 GESTIÓN ADMIN: Solo administradores pueden modificar
    match /categories/{categoryId} {
      allow read: if true; // 📖 Lectura pública para navegación
      allow write: if false; // 🔐 Solo administradores (desde backend/consola)
    }
    
    // === NOTIFICACIONES ===
    // Sistema de notificaciones para usuarios
    match /notifications/{notificationId} {
      allow read: if request.auth != null && 
                 request.auth.uid == resource.data.userId; // 🔐 Solo el destinatario
      allow write: if false; // 🔐 Solo el sistema puede crear notificaciones
    }
    
    // === CONFIGURACIÓN GLOBAL ===
    // Configuración pública de la aplicación
    match /app_config/{configId} {
      allow read: if true; // 📖 Configuración pública (términos, contacto, etc.)
      allow write: if false; // 🔐 Solo administradores desde backend
    }
    
    // === UBICACIONES ===
    // Cache de ubicaciones para mejorar rendimiento
    match /locations/{locationId} {
      allow read: if true; // 📖 Lectura pública para búsquedas geográficas
      allow write: if false; // 🔐 Solo el sistema puede gestionar ubicaciones
    }
    
    // === REPORTES ===
    // Sistema de reportes para servicios/usuarios problemáticos
    match /reports/{reportId} {
      allow create: if request.auth != null && 
                   request.auth.uid == request.resource.data.reporterId; // 🔐 Solo usuarios autenticados pueden reportar
      allow read, update, delete: if false; // 🔐 Solo administradores desde backend
    }
    
    // 🚫 Denegar acceso a todo lo demás por defecto
    match /{document=**} {
      allow read, write: if false;
    }
  }
}