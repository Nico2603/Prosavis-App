rules_version = '2';

// üî• FIREBASE STORAGE SECURITY RULES
// Reglas para gesti√≥n de im√°genes y archivos

service firebase.storage {
  match /b/{bucket}/o {
    
    // === FUNCIONES HELPER ===
    function isSignedIn() {
      return request.auth != null;
    }
    function isServiceOwnerById(serviceId) {
      return isSignedIn() 
        && firestore.exists(/databases/(default)/documents/services/$(serviceId))
        && request.auth.uid == firestore.get(/databases/(default)/documents/services/$(serviceId)).data.providerId;
    }
    
    // === IM√ÅGENES DE PERFIL ===
    match /profile_images/{fileName} {
      allow read: if true;

      allow create, update: if isSignedIn()
        && fileName.matches('.*' + request.auth.uid + '.*')
        && request.resource.size < 5 * 1024 * 1024
        && request.resource.contentType != null
        && request.resource.contentType.matches('image/.*');

      // Solo due√±o (sin an√≥nimo)
      allow delete: if isSignedIn() && fileName.matches('.*' + request.auth.uid + '.*');
    }

    // === IM√ÅGENES DE SERVICIOS ===
    // ‚úÖ (sin borrado abierto)
    // Parche inmediato sin cambiar rutas: exige que el archivo lleve metadato serviceId y valida contra Firestore.
    match /service_images/{fileName} {
      allow read: if true;

      // Requiere metadata.serviceId y propiedad del servicio
      allow create, update: if isSignedIn()
        && request.resource != null
        && request.resource.contentType != null
        && request.resource.contentType.matches('image/(jpeg|png|webp|jpg)')
        && request.resource.size < 10 * 1024 * 1024
        && request.resource.metadata.serviceId != null
        && isServiceOwnerById(request.resource.metadata.serviceId);

      // Borrado solo por due√±o del servicio (lee serviceId desde metadata existente)
      allow delete: if isSignedIn()
        && resource.metadata.serviceId != null
        && isServiceOwnerById(resource.metadata.serviceId);
    }
    
    // === DOCUMENTOS Y CERTIFICADOS ===
    // Evita SVG (XSS) en documents
    match /documents/{userId}/{fileName} {
      allow read, write: if isSignedIn()
        && request.auth.uid == userId
        && request.resource.size < 2 * 1024 * 1024
        && (
          request.resource.contentType.matches('application/pdf')
          || (
            request.resource.contentType.matches('image/.*')
            && !request.resource.contentType.matches('image/svg\\+xml')
          )
        );
    }
    
    // üö´ Denegar acceso a todo lo dem√°s por defecto
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}