rules_version = '2';

// üî• FIREBASE STORAGE SECURITY RULES
// Reglas para gesti√≥n de im√°genes y archivos

service firebase.storage {
  match /b/{bucket}/o {
    
    // === IM√ÅGENES DE PERFIL ===
    // üîí Solo el propietario puede gestionar sus fotos de perfil
    match /profile_images/{fileName} {
      // Permitir lectura de im√°genes de perfil para mostrar en la app
      allow read: if true;
      
      // ‚úÖ SUBIDA: Solo usuarios autenticados pueden subir sus propias im√°genes
      allow create, update: if request.auth != null && 
                           fileName.matches('.*' + request.auth.uid + '.*') &&
                           request.resource.size < 5 * 1024 * 1024 && // M√°ximo 5MB
                           request.resource.contentType.matches('image/.*'); // Solo im√°genes
                           
      // ‚úÖ ELIMINACI√ìN: Usuario puede eliminar sus im√°genes
      // O eliminaci√≥n en cascada desde el backend (sin autenticaci√≥n)
      allow delete: if (request.auth != null && fileName.matches('.*' + request.auth.uid + '.*')) ||
                   request.auth == null; // Permitir eliminaci√≥n desde backend sin auth
    }
    
    // === IM√ÅGENES DE SERVICIOS ===
    // üîí Solo usuarios autenticados pueden gestionar las im√°genes de servicios
    match /service_images/{fileName} {
      // Permitir lectura p√∫blica de im√°genes de servicios para navegaci√≥n
      allow read: if true;
      
      // ‚úÖ SUBIDA/ACTUALIZACI√ìN: Solo usuarios autenticados pueden subir im√°genes de servicios
      allow create, update: if request.auth != null && 
                           request.resource != null &&
                           request.resource.size < 10 * 1024 * 1024 && // M√°ximo 10MB para servicios
                           request.resource.contentType != null &&
                           request.resource.contentType.matches('image/.*') && // Solo im√°genes
                           // Validar formatos permitidos (JPEG, PNG, WebP)
                           (request.resource.contentType == 'image/jpeg' ||
                            request.resource.contentType == 'image/png' ||
                            request.resource.contentType == 'image/webp' ||
                            request.resource.contentType == 'image/jpg');
      
      // ‚úÖ ELIMINACI√ìN: Cualquier proceso puede eliminar im√°genes de servicios
      // (Usuario autenticado o eliminaci√≥n en cascada desde el backend)
      allow delete: if true;
    }
    
    // === DOCUMENTOS Y CERTIFICADOS ===
    // Para futuras funcionalidades de verificaci√≥n
    match /documents/{userId}/{fileName} {
      allow read, write: if request.auth != null && 
                        request.auth.uid == userId &&
                        request.resource.size < 2 * 1024 * 1024; // M√°ximo 2MB para documentos
    }
    
    // üö´ Denegar acceso a todo lo dem√°s por defecto
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}